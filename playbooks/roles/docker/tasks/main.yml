- name: Remove old versions of Docker if any
  apt:
    name:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - podman-docker
      - containerd
      - runc
    state: absent
    purge: yes
  become: yes
  when: ansible_distribution == "Ubuntu"

- name: Install required packages
  apt:
    name:
      - ca-certificates
      - curl
    state: present
    update_cache: yes
  become: yes
  when: ansible_distribution == "Ubuntu"

- name: Add docker gpg key
  get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: true
  become: yes

- name: Add Docker apt repository
  apt_repository:
    repo: "deb [arch={{ 'arm64' if ansible_architecture in ['aarch64','arm64'] else 'amd64' }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    filename: docker
    state: present


- name: Install Docker Engine
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  become: yes
  when: ansible_distribution == "Ubuntu"

- name: Ensure docker group exists
  group:
    name: docker
    state: present
  become: yes

- name: Ensure current user is in docker group
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  become: yes

- name: Ensure docker service is enabled and running
  service:
    name: docker
    enabled: true
    state: started
  become: yes